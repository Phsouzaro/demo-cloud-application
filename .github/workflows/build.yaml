name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
  GKE_CLUSTER: gke-shared-uat
  GKE_ZONE: southamerica-east1
  DEPLOYMENT_NAME: my-java-app
  IMAGE: cloud-demo/openjdk

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          export_default_credentials: true

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Configure Docker to use gcloud command-line tool as a credential helper
        run: gcloud --quiet auth configure-docker

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v0.4.0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Build and push Docker image
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --region ${{ env.GKE_ZONE }}
          docker build -t ${{ env.GKE_ZONE }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ github.sha }} .
          docker push ${{ env.GKE_ZONE }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ github.sha }}

      - name: Deploy to GKE
        run: |
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} ${DEPLOYMENT_NAME}=${{ env.GKE_ZONE }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ github.sha }}
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}
          kubectl apply -f deployment.yaml